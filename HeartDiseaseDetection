{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0edcdfde",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:36.135517Z",
     "iopub.status.busy": "2025-07-23T02:29:36.135168Z",
     "iopub.status.idle": "2025-07-23T02:29:38.400635Z",
     "shell.execute_reply": "2025-07-23T02:29:38.399617Z"
    },
    "papermill": {
     "duration": 2.274422,
     "end_time": "2025-07-23T02:29:38.402378",
     "exception": false,
     "start_time": "2025-07-23T02:29:36.127956",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/heart-disease-dataset/heart.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "52c96d1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:38.414026Z",
     "iopub.status.busy": "2025-07-23T02:29:38.413614Z",
     "iopub.status.idle": "2025-07-23T02:29:41.260369Z",
     "shell.execute_reply": "2025-07-23T02:29:41.259080Z"
    },
    "papermill": {
     "duration": 2.854688,
     "end_time": "2025-07-23T02:29:41.262354",
     "exception": false,
     "start_time": "2025-07-23T02:29:38.407666",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "df=pd.read_csv('/kaggle/input/heart-disease-dataset/heart.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "32c53cde",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.274435Z",
     "iopub.status.busy": "2025-07-23T02:29:41.274098Z",
     "iopub.status.idle": "2025-07-23T02:29:41.280506Z",
     "shell.execute_reply": "2025-07-23T02:29:41.279728Z"
    },
    "papermill": {
     "duration": 0.01465,
     "end_time": "2025-07-23T02:29:41.282305",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.267655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1025, 14)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8da2a638",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.293616Z",
     "iopub.status.busy": "2025-07-23T02:29:41.293189Z",
     "iopub.status.idle": "2025-07-23T02:29:41.306120Z",
     "shell.execute_reply": "2025-07-23T02:29:41.305051Z"
    },
    "papermill": {
     "duration": 0.020558,
     "end_time": "2025-07-23T02:29:41.307837",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.287279",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age         0\n",
       "sex         0\n",
       "cp          0\n",
       "trestbps    0\n",
       "chol        0\n",
       "fbs         0\n",
       "restecg     0\n",
       "thalach     0\n",
       "exang       0\n",
       "oldpeak     0\n",
       "slope       0\n",
       "ca          0\n",
       "thal        0\n",
       "target      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "16be4e07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.319387Z",
     "iopub.status.busy": "2025-07-23T02:29:41.319071Z",
     "iopub.status.idle": "2025-07-23T02:29:41.351018Z",
     "shell.execute_reply": "2025-07-23T02:29:41.349889Z"
    },
    "papermill": {
     "duration": 0.039787,
     "end_time": "2025-07-23T02:29:41.352774",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.312987",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1025 entries, 0 to 1024\n",
      "Data columns (total 14 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   age       1025 non-null   int64  \n",
      " 1   sex       1025 non-null   int64  \n",
      " 2   cp        1025 non-null   int64  \n",
      " 3   trestbps  1025 non-null   int64  \n",
      " 4   chol      1025 non-null   int64  \n",
      " 5   fbs       1025 non-null   int64  \n",
      " 6   restecg   1025 non-null   int64  \n",
      " 7   thalach   1025 non-null   int64  \n",
      " 8   exang     1025 non-null   int64  \n",
      " 9   oldpeak   1025 non-null   float64\n",
      " 10  slope     1025 non-null   int64  \n",
      " 11  ca        1025 non-null   int64  \n",
      " 12  thal      1025 non-null   int64  \n",
      " 13  target    1025 non-null   int64  \n",
      "dtypes: float64(1), int64(13)\n",
      "memory usage: 112.2 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()\n",
    "df.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "25d0427e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.364453Z",
     "iopub.status.busy": "2025-07-23T02:29:41.364121Z",
     "iopub.status.idle": "2025-07-23T02:29:41.395235Z",
     "shell.execute_reply": "2025-07-23T02:29:41.394003Z"
    },
    "papermill": {
     "duration": 0.038981,
     "end_time": "2025-07-23T02:29:41.397052",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.358071",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(302, 14)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e73e4f2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.410050Z",
     "iopub.status.busy": "2025-07-23T02:29:41.409206Z",
     "iopub.status.idle": "2025-07-23T02:29:41.413494Z",
     "shell.execute_reply": "2025-07-23T02:29:41.412727Z"
    },
    "papermill": {
     "duration": 0.01283,
     "end_time": "2025-07-23T02:29:41.415076",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.402246",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import RobustScaler\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ec35d840",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.427168Z",
     "iopub.status.busy": "2025-07-23T02:29:41.426851Z",
     "iopub.status.idle": "2025-07-23T02:29:41.451036Z",
     "shell.execute_reply": "2025-07-23T02:29:41.450050Z"
    },
    "papermill": {
     "duration": 0.032332,
     "end_time": "2025-07-23T02:29:41.452728",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.420396",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>cp</th>\n",
       "      <th>trestbps</th>\n",
       "      <th>chol</th>\n",
       "      <th>fbs</th>\n",
       "      <th>restecg</th>\n",
       "      <th>thalach</th>\n",
       "      <th>exang</th>\n",
       "      <th>oldpeak</th>\n",
       "      <th>slope</th>\n",
       "      <th>ca</th>\n",
       "      <th>thal</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>136</td>\n",
       "      <td>319</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>152</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320</th>\n",
       "      <td>53</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>130</td>\n",
       "      <td>264</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>143</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>110</td>\n",
       "      <td>167</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>114</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  \\\n",
       "27    58    0   1       136   319    1        0      152      0      0.0   \n",
       "320   53    0   0       130   264    0        0      143      0      0.4   \n",
       "145   40    1   0       110   167    0        0      114      1      2.0   \n",
       "\n",
       "     slope  ca  thal  target  \n",
       "27       2   2     2       0  \n",
       "320      1   0     2       1  \n",
       "145      1   0     3       0  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Outliers in trestbps,chol,thalach,old peak,ca\n",
    "df.sample(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0ce592cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.466252Z",
     "iopub.status.busy": "2025-07-23T02:29:41.465883Z",
     "iopub.status.idle": "2025-07-23T02:29:41.475939Z",
     "shell.execute_reply": "2025-07-23T02:29:41.474688Z"
    },
    "papermill": {
     "duration": 0.01848,
     "end_time": "2025-07-23T02:29:41.477479",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.458999",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "400"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.nunique().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9b69d863",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.490130Z",
     "iopub.status.busy": "2025-07-23T02:29:41.489392Z",
     "iopub.status.idle": "2025-07-23T02:29:41.494390Z",
     "shell.execute_reply": "2025-07-23T02:29:41.493359Z"
    },
    "papermill": {
     "duration": 0.013487,
     "end_time": "2025-07-23T02:29:41.496459",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.482972",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "d=DecisionTreeClassifier(criterion='gini',max_depth=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "48d12592",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.508776Z",
     "iopub.status.busy": "2025-07-23T02:29:41.508378Z",
     "iopub.status.idle": "2025-07-23T02:29:41.513173Z",
     "shell.execute_reply": "2025-07-23T02:29:41.512175Z"
    },
    "papermill": {
     "duration": 0.013057,
     "end_time": "2025-07-23T02:29:41.515080",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.502023",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "p=PCA(n_components=8)\n",
    "#8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97770d01",
   "metadata": {
    "papermill": {
     "duration": 0.005136,
     "end_time": "2025-07-23T02:29:41.525960",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.520824",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8653b90b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.540458Z",
     "iopub.status.busy": "2025-07-23T02:29:41.540127Z",
     "iopub.status.idle": "2025-07-23T02:29:41.551815Z",
     "shell.execute_reply": "2025-07-23T02:29:41.550629Z"
    },
    "papermill": {
     "duration": 0.020364,
     "end_time": "2025-07-23T02:29:41.553428",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.533064",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'x_trained_scale = scaler.fit_transform(x_train)\\nx_test_scale=scaler.transform(x_test)\\nx_trained_scale=p.fit_transform(x_train)\\nx_test_scale=p.transform(x_test)\\nlr.fit(x_trained_scale,y_train)\\ny_pred=lr.predict(x_test_scale)\\naccuracy_score(y_test,y_pred)'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(df.drop('target', axis=1), df['target'], test_size=0.2, random_state=42)\n",
    "lr=LogisticRegression()\n",
    "scaler = RobustScaler()\n",
    "\"\"\"x_trained_scale = scaler.fit_transform(x_train)\n",
    "x_test_scale=scaler.transform(x_test)\n",
    "x_trained_scale=p.fit_transform(x_train)\n",
    "x_test_scale=p.transform(x_test)\n",
    "lr.fit(x_trained_scale,y_train)\n",
    "y_pred=lr.predict(x_test_scale)\n",
    "accuracy_score(y_test,y_pred)\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c5ab2032",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.566501Z",
     "iopub.status.busy": "2025-07-23T02:29:41.566183Z",
     "iopub.status.idle": "2025-07-23T02:29:41.581284Z",
     "shell.execute_reply": "2025-07-23T02:29:41.580356Z"
    },
    "papermill": {
     "duration": 0.023274,
     "end_time": "2025-07-23T02:29:41.583157",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.559883",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.pipeline import Pipeline\n",
    "p=Pipeline([('trf1',scaler),('trf2',p),('trf3',lr)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5b426970",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.595488Z",
     "iopub.status.busy": "2025-07-23T02:29:41.595156Z",
     "iopub.status.idle": "2025-07-23T02:29:41.660954Z",
     "shell.execute_reply": "2025-07-23T02:29:41.660067Z"
    },
    "papermill": {
     "duration": 0.074172,
     "end_time": "2025-07-23T02:29:41.662861",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.588689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;trf1&#x27;, RobustScaler()), (&#x27;trf2&#x27;, PCA(n_components=8)),\n",
       "                (&#x27;trf3&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;trf1&#x27;, RobustScaler()), (&#x27;trf2&#x27;, PCA(n_components=8)),\n",
       "                (&#x27;trf3&#x27;, LogisticRegression())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RobustScaler</label><div class=\"sk-toggleable__content\"><pre>RobustScaler()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">PCA</label><div class=\"sk-toggleable__content\"><pre>PCA(n_components=8)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('trf1', RobustScaler()), ('trf2', PCA(n_components=8)),\n",
       "                ('trf3', LogisticRegression())])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a668c6ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.683250Z",
     "iopub.status.busy": "2025-07-23T02:29:41.682896Z",
     "iopub.status.idle": "2025-07-23T02:29:41.701297Z",
     "shell.execute_reply": "2025-07-23T02:29:41.700505Z"
    },
    "papermill": {
     "duration": 0.030814,
     "end_time": "2025-07-23T02:29:41.703471",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.672657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_pred=p.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ebf00e20",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.724766Z",
     "iopub.status.busy": "2025-07-23T02:29:41.724380Z",
     "iopub.status.idle": "2025-07-23T02:29:41.732470Z",
     "shell.execute_reply": "2025-07-23T02:29:41.731676Z"
    },
    "papermill": {
     "duration": 0.020391,
     "end_time": "2025-07-23T02:29:41.734103",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.713712",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8360655737704918"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0fc7e862",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.754790Z",
     "iopub.status.busy": "2025-07-23T02:29:41.754405Z",
     "iopub.status.idle": "2025-07-23T02:29:41.758238Z",
     "shell.execute_reply": "2025-07-23T02:29:41.757504Z"
    },
    "papermill": {
     "duration": 0.016313,
     "end_time": "2025-07-23T02:29:41.759915",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.743602",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Imbalanced Data Set==>No\n",
    "#Best Parameters\n",
    "#Remove Outliers==>Yes Done\n",
    "#Standarized the value==>Done"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9a54dd6e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.774568Z",
     "iopub.status.busy": "2025-07-23T02:29:41.773871Z",
     "iopub.status.idle": "2025-07-23T02:29:41.783306Z",
     "shell.execute_reply": "2025-07-23T02:29:41.782364Z"
    },
    "papermill": {
     "duration": 0.017845,
     "end_time": "2025-07-23T02:29:41.785102",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.767257",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "target\n",
       "1    164\n",
       "0    138\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['target'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ecdcebb6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.798838Z",
     "iopub.status.busy": "2025-07-23T02:29:41.797798Z",
     "iopub.status.idle": "2025-07-23T02:29:41.802167Z",
     "shell.execute_reply": "2025-07-23T02:29:41.801284Z"
    },
    "papermill": {
     "duration": 0.01266,
     "end_time": "2025-07-23T02:29:41.803823",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.791163",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Data Standarized"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "11c733e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.818055Z",
     "iopub.status.busy": "2025-07-23T02:29:41.817436Z",
     "iopub.status.idle": "2025-07-23T02:29:41.822368Z",
     "shell.execute_reply": "2025-07-23T02:29:41.821379Z"
    },
    "papermill": {
     "duration": 0.014052,
     "end_time": "2025-07-23T02:29:41.824028",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.809976",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Outliers Removed krne hn\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7c9dcef7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.837065Z",
     "iopub.status.busy": "2025-07-23T02:29:41.836739Z",
     "iopub.status.idle": "2025-07-23T02:29:41.845019Z",
     "shell.execute_reply": "2025-07-23T02:29:41.843956Z"
    },
    "papermill": {
     "duration": 0.016941,
     "end_time": "2025-07-23T02:29:41.846948",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.830007",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of duplicated rows: 0\n",
      "Percentage duplicated: 0.0\n"
     ]
    }
   ],
   "source": [
    "duplicates = df[df.duplicated()]\n",
    "print(\"Number of duplicated rows:\", len(duplicates))\n",
    "print(\"Percentage duplicated:\", len(duplicates) / len(df) * 100)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "760f41c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.860587Z",
     "iopub.status.busy": "2025-07-23T02:29:41.860236Z",
     "iopub.status.idle": "2025-07-23T02:29:41.872275Z",
     "shell.execute_reply": "2025-07-23T02:29:41.871302Z"
    },
    "papermill": {
     "duration": 0.020667,
     "end_time": "2025-07-23T02:29:41.873738",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.853071",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>cp</th>\n",
       "      <th>trestbps</th>\n",
       "      <th>chol</th>\n",
       "      <th>fbs</th>\n",
       "      <th>restecg</th>\n",
       "      <th>thalach</th>\n",
       "      <th>exang</th>\n",
       "      <th>oldpeak</th>\n",
       "      <th>slope</th>\n",
       "      <th>ca</th>\n",
       "      <th>thal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>319</th>\n",
       "      <td>53</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>128</td>\n",
       "      <td>216</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>115</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>77</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>125</td>\n",
       "      <td>304</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>162</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>64</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>263</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>105</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  \\\n",
       "319   53    0   2       128   216    0        0      115      0      0.0   \n",
       "160   77    1   0       125   304    0        0      162      1      0.0   \n",
       "38    64    1   0       128   263    0        1      105      1      0.2   \n",
       "\n",
       "     slope  ca  thal  \n",
       "319      2   0     0  \n",
       "160      2   3     2  \n",
       "38       1   1     3  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.sample(3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cf50e27f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.887335Z",
     "iopub.status.busy": "2025-07-23T02:29:41.886806Z",
     "iopub.status.idle": "2025-07-23T02:29:41.891113Z",
     "shell.execute_reply": "2025-07-23T02:29:41.890377Z"
    },
    "papermill": {
     "duration": 0.012822,
     "end_time": "2025-07-23T02:29:41.892673",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.879851",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Grid Search CV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "cdc04322",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.906444Z",
     "iopub.status.busy": "2025-07-23T02:29:41.906117Z",
     "iopub.status.idle": "2025-07-23T02:29:41.914799Z",
     "shell.execute_reply": "2025-07-23T02:29:41.913803Z"
    },
    "papermill": {
     "duration": 0.017586,
     "end_time": "2025-07-23T02:29:41.916326",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.898740",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-302"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()-df.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "28abe528",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.929893Z",
     "iopub.status.busy": "2025-07-23T02:29:41.929498Z",
     "iopub.status.idle": "2025-07-23T02:29:41.933781Z",
     "shell.execute_reply": "2025-07-23T02:29:41.932752Z"
    },
    "papermill": {
     "duration": 0.012695,
     "end_time": "2025-07-23T02:29:41.935368",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.922673",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Ouliers Removal\n",
    "#Because of medical Data set we are not going to remove any outliers instead we used RobustScalar which can handle outliers also"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "9df9dd12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T02:29:41.950774Z",
     "iopub.status.busy": "2025-07-23T02:29:41.950365Z",
     "iopub.status.idle": "2025-07-23T02:29:41.954796Z",
     "shell.execute_reply": "2025-07-23T02:29:41.953890Z"
    },
    "papermill": {
     "duration": 0.014054,
     "end_time": "2025-07-23T02:29:41.956434",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.942380",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#optuna lgana ha us say pehlay koi achi si ensemle techique"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15c74f92",
   "metadata": {
    "papermill": {
     "duration": 0.006276,
     "end_time": "2025-07-23T02:29:41.969340",
     "exception": false,
     "start_time": "2025-07-23T02:29:41.963064",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 216167,
     "sourceId": 477177,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.803609,
   "end_time": "2025-07-23T02:29:42.701315",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-23T02:29:30.897706",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
